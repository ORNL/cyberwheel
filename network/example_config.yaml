# Network Configuration
network:
  name: network_foo
  desc: A network that foos all the bars

# TODO: I'm no longer using this summary view of the topology in any of the network code
    # it seemed easier to parse if I just pulled from the detailed config below this block.
    # This summary 'topology:' block may be useful for humans though..?
# Topology Definition
topology:
  - MainRouter:
    #- wan_subnet    # adding this so the MainRouter can have a sane default route
    - SubnetA:
      - Host1
      - Host2
    - SubnetB:
      - Host3
    - SubnetCRouter:
      - SubnetC:
        - Host4
        - Host5
    - SubnetD
    - SubnetE
  #MainRouter:
  #  type: router
  #  subnets:
  #    - subnetA
  #    - subnetB
  #subnetCRouter:
  #  type: router
  #  subnets:
  #    - subnetC


# Routers
routers:
  MainRouter:
    # represents the state of the routing table or subnets this router "knows" about
    default_route: wan_subnet
    routes:
      - SubnetA
      - SubnetB
      - SubnetCRouter    # this would inherit all defined routes from SubnetCRouter
                         # i.e. MainRouter would know about SubnetC because SubnetCRouter
                         # has that route defined
      #- SubnetD    # if subnet not defined in "routes" assume no route to said subnet?
    firewall:
      - https:    # service name as key?
        port: 443
        proto: tcp
        src:        # default to allow any src if not defined?
          - Host2   # would be nice to have the ability to specify hosts and/or subnets here
          - Host3
          - SubnetA
        desc: optional description
      - second_service:
        port: 12345
        proto: tcp
        src: []    # src not defined so assume "allow any source"

# Child Router (nested under MainRouter)
  SubnetCRouter:
    default_route: MainRouter    # ability to use either subnet or router to specify default route
                                 # this gives us the freedom to not have to define networks between routers
                                 # i.e. MainRouter <--> SubnetARouter
    routes:
      - subnetC
    firewall:
      # this would allow all hosts on SubnetA to hit any host on SubnetB on the defined ports
      - source_subnet: SubnetA
        allow_ports:
          - 80: tcp
          - 443: tcp
          - 123: udp
      # this would allow all hosts on SubnetB to connect only to Host3 via the defined services
      - source_subnet: SubnetB
        dest_hosts:
          - Host3
        allow_services: [SSH, FTP]  # Allow SSH and FTP services

# Subnets
subnets:
  SubnetA:
    default_route: MainRouter
    ip_range: 192.168.1.0/24

  SubnetB:
    default_route: MainRouter
    ip_range: 192.168.2.0/24

  SubnetC:
    default_route: SubnetCRouter
    ip_range: 192.168.3.0/24

# Hosts
hosts:
  Host1:
    type: Server
    subnet: SubnetA
    # host based firewall
    firewall:
      - https:    # service name as key?
        port: 443
        proto: tcp
        src:        # default to allow any src if not defined?
          - Host2   # would be nice to have the ability to specify hosts and/or subnets here
          - Host3
          - SubnetA
        desc: optional description
      - second_service:
        port: 12345
        proto: tcp
        src: []    # src not defined so assume "allow any source"

  Host2:
    type: Workstation
    subnet: SubnetA
    firewall:    # if firewall not defined or empty assume "allow all" for ease of use?
               # or maybe default to allowing all defined services for the host type?

  Host3:
    type: Workstation
    subnet: SubnetC

  Host4:
    type: Printer
    subnet: SubnetC
